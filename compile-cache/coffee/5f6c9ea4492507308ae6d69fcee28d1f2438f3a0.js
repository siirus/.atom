(function() {
  var Config, Os;

  Config = require('../lib/config');

  Os = require('os');

  describe('pathSeparator tests', function() {
    ({
      beforeEach: function() {}
    });
    it('Not Windows', function() {
      spyOn(Os, 'platform').andReturn(Math.random());
      expect(Config.pathSeparator()).toBe('/');
      return expect(Os.platform).toHaveBeenCalled();
    });
    return it('Windows', function() {
      spyOn(Os, 'platform').andReturn('win32');
      expect(Config.pathSeparator()).toBe('\\');
      return expect(Os.platform).toHaveBeenCalled();
    });
  });

  describe('saveFile tests', function() {
    beforeEach(function() {
      spyOn(Config, 'saveFolder').andReturn('folder');
      return spyOn(Config, 'pathSeparator').andReturn('/');
    });
    return describe('projects restoring', function() {
      return it('is a project to be restored', function() {
        atom.project.path || (atom.project.rootDirectories[0].path = 'path');
        expect(Config.saveFile()).toBe('folder/path/project.json');
        expect(Config.saveFolder).toHaveBeenCalled();
        return expect(Config.pathSeparator).toHaveBeenCalled();
      });
    });
  });

  describe('transformProjectPath tests', function() {
    it('is Windows with :', function() {
      var path;
      spyOn(Config, 'isWindows').andReturn(true);
      path = Config.transformProjectPath('c:\\path');
      return expect(path).toBe('c\\path');
    });
    it('is Windows without :', function() {
      var path;
      spyOn(Config, 'isWindows').andReturn(true);
      path = Config.transformProjectPath('path\\more');
      return expect(path).toBe('path\\more');
    });
    return it('is not windows', function() {
      var path;
      spyOn(Config, 'isWindows').andReturn(false);
      path = Config.transformProjectPath('path/more');
      return expect(path).toBe('path/more');
    });
  });

  describe('config tests', function() {
    beforeEach(function() {
      spyOn(atom.config, 'set');
      return spyOn(atom.config, 'get');
    });
    it('Contains key and value', function() {
      Config.config('key', 'val');
      expect(atom.config.set).toHaveBeenCalled();
      return expect(atom.config.get).not.toHaveBeenCalled();
    });
    it('Contains key and forced', function() {
      Config.config('key', void 0, true);
      expect(atom.config.set).toHaveBeenCalled();
      return expect(atom.config.get).not.toHaveBeenCalled();
    });
    return it('Contains key only', function() {
      Config.config('key');
      expect(atom.config.set).not.toHaveBeenCalled();
      return expect(atom.config.get).toHaveBeenCalled();
    });
  });

}).call(this);

//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAiZmlsZSI6ICIiLAogICJzb3VyY2VSb290IjogIiIsCiAgInNvdXJjZXMiOiBbCiAgICAiZmlsZTovLy9DOi9Vc2Vycy9tYnVsZ2Frby8uYXRvbS9wYWNrYWdlcy9zYXZlLXNlc3Npb24vc3BlYy9jb25maWctc3BlYy5jb2ZmZWUiCiAgXSwKICAibmFtZXMiOiBbXSwKICAibWFwcGluZ3MiOiAiQUFBQTtBQUFBLE1BQUEsVUFBQTs7QUFBQSxFQUFBLE1BQUEsR0FBUyxPQUFBLENBQVEsZUFBUixDQUFULENBQUE7O0FBQUEsRUFDQSxFQUFBLEdBQUssT0FBQSxDQUFRLElBQVIsQ0FETCxDQUFBOztBQUFBLEVBR0EsUUFBQSxDQUFTLHFCQUFULEVBQWdDLFNBQUEsR0FBQTtBQUM5QixJQUFBLENBQUE7QUFBQSxNQUFBLFVBQUEsRUFBWSxTQUFBLEdBQUEsQ0FBWjtLQUFBLENBQUEsQ0FBQTtBQUFBLElBRUEsRUFBQSxDQUFHLGFBQUgsRUFBa0IsU0FBQSxHQUFBO0FBQ2hCLE1BQUEsS0FBQSxDQUFNLEVBQU4sRUFBVSxVQUFWLENBQXFCLENBQUMsU0FBdEIsQ0FBZ0MsSUFBSSxDQUFDLE1BQUwsQ0FBQSxDQUFoQyxDQUFBLENBQUE7QUFBQSxNQUNBLE1BQUEsQ0FBTyxNQUFNLENBQUMsYUFBUCxDQUFBLENBQVAsQ0FBOEIsQ0FBQyxJQUEvQixDQUFvQyxHQUFwQyxDQURBLENBQUE7YUFFQSxNQUFBLENBQU8sRUFBRSxDQUFDLFFBQVYsQ0FBbUIsQ0FBQyxnQkFBcEIsQ0FBQSxFQUhnQjtJQUFBLENBQWxCLENBRkEsQ0FBQTtXQU9BLEVBQUEsQ0FBRyxTQUFILEVBQWMsU0FBQSxHQUFBO0FBQ1osTUFBQSxLQUFBLENBQU0sRUFBTixFQUFVLFVBQVYsQ0FBcUIsQ0FBQyxTQUF0QixDQUFnQyxPQUFoQyxDQUFBLENBQUE7QUFBQSxNQUNBLE1BQUEsQ0FBTyxNQUFNLENBQUMsYUFBUCxDQUFBLENBQVAsQ0FBOEIsQ0FBQyxJQUEvQixDQUFvQyxJQUFwQyxDQURBLENBQUE7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

//# sourceURL=/C:/Users/mbulgako/.atom/packages/save-session/spec/config-spec.coffee
